diff --git a/finat/ufl/finiteelementbase.py b/finat/ufl/finiteelementbase.py
index 3a84f90..8057ab7 100644
--- a/finat/ufl/finiteelementbase.py
+++ b/finat/ufl/finiteelementbase.py
@@ -143,7 +143,7 @@ class FiniteElementBase(AbstractFiniteElement):
 
     def _check_component(self, domain, i):
         """Check that component index i is valid."""
-        sh = self.value_shape(domain.geometric_dimension())
+        sh = self.reference_value_shape
         r = len(sh)
         if not (len(i) == r and all(j < k for (j, k) in zip(i, sh))):
             raise ValueError(
diff --git a/finat/ufl/mixedelement.py b/finat/ufl/mixedelement.py
index e1dd1cc..95d7a67 100644
--- a/finat/ufl/mixedelement.py
+++ b/finat/ufl/mixedelement.py
@@ -142,17 +142,17 @@ class MixedElement(FiniteElementBase):
         """
         if isinstance(i, int):
             i = (i,)
-        self._check_component(i)
+        self._check_component(domain, i)
 
         # Select between indexing modes
-        if len(self.value_shape(domain)) == 1:
+        if len(self.reference_value_shape) == 1:
             # Indexing into a long vector of flattened subelement
             # shapes
             j, = i
 
             # Find subelement for this index
             for sub_element_index, e in enumerate(self._sub_elements):
-                sh = e.value_shape(domain)
+                sh = e.reference_value_shape
                 si = product(sh)
                 if j < si:
                     break
