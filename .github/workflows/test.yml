name: Run regression tests

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  check_commit:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check_commit.outputs.skip }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.push.after || github.event.pull_request.head.sha || github.event.workflow_dispatch.ref }}
      - name: Check if message contains skip keyword
        id: check_commit
        run: |
          message=$(git log -1 --pretty=format:'%B')
          regex="\[skip tests\]"
          if [[ "$message" =~ $regex ]]; then
            echo skip=true >> "$GITHUB_OUTPUT"
          fi
  build:
    name: Benchmark regression test
    runs-on: self-hosted
    container:
      image: firedrakeproject/firedrake:latest
      options: --shm-size 2g

    concurrency:
      group: testing-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true

    needs: check_commit
    if: ${{ needs.check_commit.outputs.skip != 'true' }}

    env:
      OMP_NUM_THREADS: 1

    steps:
      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y task-spooler time
          tsp -S 48
      - uses: actions/checkout@v4

      - name: Load pyrol wheel from cache
        uses: actions/cache/restore@v3
        id: cache-pyrol
        with:
          path: /tmp/wheels
          key: pyrol

      - name: Build pyrol wheel
        if: steps.cache-pyrol.outputs.cache-hit != 'true'
        run: |
          /home/firedrake/firedrake/bin/pip wheel -r requirements-git.txt -w /tmp/wheels

      - name: Save pyrol to cache
        if: steps.cache-pyrol.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: /tmp/wheels
          key: pyrol

      - name: Install Python dependencies
        run: |
          . /home/firedrake/firedrake/bin/activate
          python3 -m pip install --no-index -f /tmp/wheels pyroltrilinos
          python3 -m pip install -r requirements.txt
          python3 -m pip install .

      - name: Run test
        id: run_tests
        run: |
          . /home/firedrake/firedrake/bin/activate
          make -j test
        env:
          GADOPT_LOGLEVEL: INFO
          TS_MAXFINISHED: 100

      - name: Pytest
        id: run_pytest
        run: |
          . /home/firedrake/firedrake/bin/activate
          python -m pytest -m 'not longtest' --junit-xml=test_results.xml

      - name: Pytest report
        uses: mikepenz/action-junit-report@v4
        if: ${{ !cancelled() && steps.run_pytest.conclusion != 'skipped' }}
        with:
          check_name: Test suite report
          report_paths: test_results.xml
          include_passed: true
          annotate_only: true

      - name: Output timing information
        if: ${{ !cancelled() }}
        shell: bash
        run: |
          for id in $(tsp | tail +2 | awk '{print $1}'); do
            st="$(tsp -i $id)"
            if [[ "$st" =~ "exit code 0" ]]; then
              echo "$st" | awk '/^(Time|Command)/'
            else
              echo "$st" | awk '/^Command/ {print "Failed: " $0} /^Time/'
              echo "$st" | grep '^Command' >> test_output.log
              tsp -c $id | tail -n 10 || true
              tsp -c $id >> test_output.log || true
            fi
          done

      - name: Upload failed run log
        if: steps.run_tests.conclusion == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: run-log
          path: test_output.log
